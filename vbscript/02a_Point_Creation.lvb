' LUSAS API (LPI) PYTHON EXAMPLES
' (https://github.com/LUSAS-Software/LUSAS-API-Examples/)
'
' Example:      02a_Point_Creation.lvb
' Description:  Creates points
' Author:       Finite Element Analysis Ltd
' Date:         2025-04-25
'
' Libraries: Load the Helpers.vbs which contains useful functions
$INCLUDE %RunningScriptPath%\shared\Helpers.vbs
$ENGINE=VBScript

' Check if a model is open
If not existsDatabase() Then
    Call Err.Raise(vbObjectError + 10, "Example Script", vbCrLf & "A model must be open before running this code" & vbCrLf)
End If

'#####################################################
'## Creating Points

' The options and settings for creating all geometry in LUSAS is defined in the IFGeometryData object.
' To start any geometry creation, get the geometryData object and set all the defaults
set geometry_data = geometryData().setAllDefaults()
' Here we are creating points by specifying the coordinates, we set the option in setLowerOrderGeometryType
Call geometry_data.setLowerOrderGeometryType("coordinates")

' Now we add the point coordinates
Call geometry_data.addCoords(1.0, 1.0, 0.0)
Call geometry_data.addCoords(2.0, 2.0, 0.0)

' Now we instruct the database to the create the points. It will return an IFObject set containing the newly created points
set object_set = database().createPoint(geometry_data)

' Get all points from the returned object set
points = object_set.getObjects("Point")

' Loop through the points and print their IDs and coordinates
For Each point in points
    Call getTextWindow().writeLine("Point: " & point.getID() & " at coordinates (" & point.getX() & "," & point.getY() & "," & point.getZ() & ")")
Next


'#####################################################
'## Use functions from shared\Helpers.vbs

' For easier geometry creation, you can use the relevant functions from the shared\Helpers.vbs file.
Call create_point(2.0, 1.0, 1.0)
